[C++ 이진 탐색 트리 소개, 구현(삽입, 삭제, 조회)]
이진 탐색 트리는 무엇인가?
이진 탐색 트리의 장점
이진 탐색 트리의 단점
이진 탐색 트리의 구현


1. 레드블랙트리 구현하기
어떤 노드에 자식 노드가 없다면, 그 노드를 리프 노드(leaf node)

[레드 블랙 트리가 되기위한 필수조건]
노드는 레드 혹은 블랙 중의 하나이다.
루트 노드는 블랙이다.
모든 리프 노드(nli 노드)는 블랙이다.
레드 노드의 자식 노드들은 언제나 모두 블랙이다. (즉, 레드 노드는 연달아 나타날 수 없으며, 블랙 노드만이 레드 노드의 부모 노드가 될 수 있다.)
임의의 노드에서 자손 리프 노드(nil 노드)까지 가는 경로들의 블랙 노드의 수는 같다. (자기 자신은 카운트에서 제외)

NIL 노드?
1. 존재하지 않는 노드
2. 자녀가 없으면 자녀의 노드를 nil 노드로 표기
3. 값이 있는 노드와 동등하게 취급
4. 레드 블랙 트리에서 리프(leaf)노드는 nil 노드이다

AVG

https://ko.wikipedia.org/wiki/%EB%A0%88%EB%93%9C-%EB%B8%94%EB%9E%99_%ED%8A%B8%EB%A6%AC
https://ansohxxn.github.io/programmers/102/
https://gist.github.com/gowoonsori/a725e29ef1880f0592fe5760f4908c6b
https://www.youtube.com/watch?v=2MdsebfJOyM